import { useEffect, useState } from "react"
import Loader from "../components/Loader"
import FormField from "../components/Formfield"
import Card from "../components/Card"
import Header from "../components/Header"
import axios from "axios"


const Home = () => {

  const [posts, setPosts] = useState([])
  const [loading, setLoading] = useState(false)
  const [searchText, setSearchText] = useState('')
  const [searchedResult, setSearchedResult] = useState(null)
  const [searchTimeout, setSearchTimeout] = useState(null)

  useEffect(() => {

    // ---- All Posts
    const getAllPosts = async () => {
      setLoading(true)
      await axios.get('http://localhost:5000/api/v1/posts/all-posts')
        .then((response) => setPosts(response.data.data))
        // .then(() => console.log('ll', posts))
        .catch(console.error())
        .finally(setLoading(false))
    }
    getAllPosts()
  }, [])

  const handleSearchChange = async (e) => {
    clearTimeout(searchTimeout)
    setSearchText(e.target.value)
    setSearchTimeout(
      setTimeout(() => {
        const searchResults = posts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase())
          || item.prompt.toLowerCase().includes(searchText.toLowerCase()))
        setSearchedResult(searchResults)
      }, 500)
    )
  }
  return (

    <section className="max-w-7xl">

      {/* Header */}
      <Header
        header={"The Community Showcase"}
        paragraph={"Browse through a collection of imaginative and visually stunning images generated by DALL-E AI"}
      />

      {/* Form */}
      <div className="mt-16  ">
        <FormField
          labelName='Search posts'
          type={'text'}
          name={'text'}
          placeholder={'Search posts'}
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ?
          (
            <div className="flex flex-row items-center justify-center">
              <Loader />
            </div>
          )
          :
          (
            <>
              {/* Search  */}
              {searchText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3">
                  Showing results for <span className="text-[#222328]">{searchText}</span>
                </h2>
              )}

              {/* Display Images */}
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ? (
                  <RenderCards title="No search results found" data={searchedResult} />
                ) : (
                  <RenderCards title="No posts found" data={posts} />
                )
                }
              </div>
            </>
          )}
      </div>
    </section>
  )
}
export default Home

// Cards
const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.reverse().map((post) => (
      <Card key={post._id} {...post} />
    ))
  }
  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  )
}
